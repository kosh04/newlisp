version: 10.7.0.{build}

os: Windows Server 2012 R2

init:
  - git config --global core.autocrlf input

environment:
  global:
    CC: gcc
    STRIP: strip
    MSYS_ROOT: C:\MinGW\msys\1.0
    MINGW_ROOT: C:\MinGW
    MSYS2_ROOT: C:\msys64
    CYGWIN_CACHE: C:\cygwin\var\cache\setup
    CYGWIN_MIRROR: http://mirrors.kernel.org/sourceware/cygwin/

  matrix:
    - TARGET: mingw32
      MSYS_ARCH: x86

    - TARGET: i686-w64-mingw32
      MSYS2_ARCH: i686
      MSYSTEM: MINGW32

    - TARGET: x86_64-w64-mingw32
      MSYS2_ARCH: x86_64
      MSYSTEM: MINGW64

    - TARGET: i686-pc-cygwin
      CYGWIN_ARCH: x86
      CYGWIN_ROOT: C:\cygwin
      CYGWIN_PACKAGES: libffi-devel,libreadline-devel

    - TARGET: x86_64-pc-cygwin
      CYGWIN_ARCH: x86_64
      CYGWIN_ROOT: C:\cygwin64
      CYGWIN_PACKAGES: make,gcc-core,libffi6,libffi-devel,libreadline7,libreadline-devel,cygrunsrv,libisl10,libcloog-isl4

matrix:
  allow_failures:
    # Note: mingw32 with libffi may requires CFLAGS+="-DWINVER=0x0600"
    - TARGET: mingw32

cache:
  - '%MSYS2_ROOT%\var\cache'
  - '%CYGWIN_CACHE%'

install:
  - if defined MSYS2_ARCH appveyor SetVariable -Name PATH -Value "%MSYS2_ROOT%\usr\bin;%PATH%"
  - if defined MSYS2_ARCH appveyor SetVariable -Name PATH -Value "%MSYS2_ROOT%\%MSYSTEM%\bin;%PATH%"

  - if defined MSYS_ARCH appveyor SetVariable -Name PATH -Value "%MINGW_ROOT%\bin;%PATH%"
  - if defined MSYS_ARCH appveyor SetVariable -Name PATH -Value "%MSYS_ROOT%\bin;%PATH%"
  - if defined MSYS_ARCH curl -Os ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz
  - if defined MSYS_ARCH tar xf libffi-3.2.1.tar.gz
  - if defined MSYS_ARCH cd libffi-3.2.1
  - if defined MSYS_ARCH sh -c "./configure --prefix=/usr/local"
  - if defined MSYS_ARCH sh -c "make && make install"
  - if defined MSYS_ARCH cd ..
  - if defined MSYS_ARCH appveyor SetVariable -Name LIBRARY_PATH -Value "/usr/local/lib"

  - if defined CYGWIN_ARCH appveyor SetVariable -Name PATH -Value "%CYGWIN_ROOT%\bin;%PATH%"
  - if defined CYGWIN_ARCH C:\cygwin\setup-x86.exe -qnNdO --arch="%CYGWIN_ARCH%" --root="%CYGWIN_ROOT%" --site="%CYGWIN_MIRROR%" --local-package-dir="%CYGWIN_CACHE%" --packages="%CYGWIN_PACKAGES%"
  - if defined CYGWIN_ARCH sh -lc ""
  - if defined CYGWIN_ARCH sh -lc "cygcheck -cd cygwin $(echo %CYGWIN_PACKAGES% | tr , ' ')"
  - if defined CYGWIN_ARCH sh -lc "cygserver-config -y && cygrunsrv --start cygserver"
  - if defined CYGWIN_ARCH sh -lc "curl -OLsk https://github.com/bminor/glibc/raw/master/inet/netinet/icmp6.h"
  - if defined CYGWIN_ARCH sh -lc "install -D icmp6.h /usr/include/netinet/icmp6.h"

  - where %CC%
  - '%CC% -v'

build_script:
  - sh -c 'make CC="$CC --coverage"'

test_script:
  - sh -c "./newlisp -v"
  - sh -c "make testall"

on_success:
  - set PYTHON=C:\Python27
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%APPDATA%\Python\Scripts;%PATH%
  - pip install --user codecov
  - codecov

artifacts:
  - path: newlisp.exe
  - path: newlisp.dll
